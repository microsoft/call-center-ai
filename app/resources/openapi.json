{
    "openapi": "3.0.2",
    "info": {
        "title": "Call Center AI",
        "description": "AI-powered call center solution with Azure and OpenAI GPT.",
        "contact": {
            "name": "GitHub",
            "url": "https://github.com/microsoft/call-center-ai/issues"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/health/liveness": {
            "get": {
                "tags": [
                    "health"
                ],
                "responses": {
                    "204": {
                        "content": {
                            "text/plain": {}
                        }
                    }
                },
                "summary": "Get the liveness status of the server."
            }
        },
        "/health/readiness": {
            "get": {
                "tags": [
                    "health"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadinessModel"
                                }
                            }
                        }
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadinessModel"
                                }
                            }
                        }
                    }
                },
                "summary": "Get the liveness readiness of the server.",
                "description": "Status will be \"ok\" if and only if all indicators (storage, database, cache, sms, ...) are ready. Functional testing is applied on all dependencies (transaction, health, ...)."
            }
        },
        "/report": {
            "get": {
                "tags": [
                    "ui"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/html": {}
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "summary": "Web interface to list calls."
            },
            "parameters": [
                {
                    "name": "phone_number",
                    "description": "Phone number in a E164 format.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/report/{call_id}": {
            "get": {
                "tags": [
                    "ui"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/html": {}
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "text/plain": {}
                        }
                    }
                },
                "summary": "Web interface to details a single call."
            },
            "parameters": [
                {
                    "examples": {
                        "UUID": {
                            "value": "74e74ad0-c9ca-41c4-8b53-ff17f40e3a95"
                        }
                    },
                    "name": "call_id",
                    "description": "UUID of the object.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/call/{call_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallGetModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a single call object.",
                "description": "Returns a single call object."
            },
            "parameters": [
                {
                    "examples": {
                        "UUID": {
                            "value": "74e74ad0-c9ca-41c4-8b53-ff17f40e3a95"
                        }
                    },
                    "name": "call_id",
                    "description": "UUID of the object.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/call/{phone_number}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallGetModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "summary": "Get a single call object.",
                "description": "Match the most recent one for a given phone number."
            },
            "parameters": [
                {
                    "examples": {
                        "French phone number": {
                            "value": "+337755194077"
                        }
                    },
                    "name": "phone_number",
                    "description": "Phone number in a E164 format.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/call": {
            "get": {
                "parameters": [
                    {
                        "examples": {
                            "French phone number": {
                                "value": "+337755194077"
                            }
                        },
                        "name": "phone_number",
                        "description": "Phone number in a E164 format.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallGetModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "summary": "List call objects."
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallInitiateModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallGetModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "summary": "Initiate a new outbound call."
            }
        },
        "/communicationservices/event/{call_id}/{secret}": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "event"
                ],
                "responses": {
                    "204": {
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "AzureCommunicationServicesManaged": []
                    },
                    {
                        "CallbackCallSecret": []
                    }
                ],
                "summary": "Callback for Azure Communication Services events."
            },
            "parameters": [
                {
                    "examples": {
                        "UUID": {
                            "value": "74e74ad0-c9ca-41c4-8b53-ff17f40e3a95"
                        }
                    },
                    "name": "call_id",
                    "description": "UUID of the object.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "Random text": {
                            "value": "6sDawCHPf27fDNA2"
                        }
                    },
                    "name": "secret",
                    "description": "Secret string for authorization.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/twilio/sms": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TwilioSmsModel"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "event"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/xml": {}
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ReadinessModel": {
                "description": "",
                "required": [
                    "status",
                    "checks"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "description": "",
                        "enum": [
                            "fail",
                            "ok"
                        ],
                        "type": "string",
                        "example": ""
                    },
                    "checks": {
                        "$ref": "#/components/schemas/ReadinessCheckModel",
                        "description": ""
                    }
                }
            },
            "ReadinessCheckModel": {
                "description": "",
                "required": [
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string",
                        "example": "cache"
                    },
                    "status": {
                        "description": "",
                        "enum": [
                            "fail",
                            "ok"
                        ],
                        "type": "string",
                        "example": ""
                    }
                }
            },
            "CallGetModel": {
                "title": "Root Type for CallGetModel",
                "description": "",
                "required": [
                    "claim",
                    "call_id",
                    "created_at",
                    "in_progress",
                    "initiate",
                    "messages",
                    "recognition_retry",
                    "reminders"
                ],
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "example": "00dfb3c4-9795-4c55-b387-6c65917a4584"
                    },
                    "created_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "initiate": {
                        "$ref": "#/components/schemas/CallInitiateModel",
                        "properties": {
                            "agent_phone_number": {
                                "type": "string"
                            },
                            "bot_company": {
                                "type": "string"
                            },
                            "bot_name": {
                                "type": "string"
                            },
                            "claim": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "lang": {
                                "type": "object",
                                "properties": {
                                    "default_short_code": {
                                        "type": "string"
                                    },
                                    "availables": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "pronunciations_en": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "short_code": {
                                                    "type": "string"
                                                },
                                                "voice": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "prosody_rate": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "task": {
                                "type": "string"
                            },
                            "phone_number": {
                                "type": "string"
                            }
                        }
                    },
                    "claim": {
                        "type": "string",
                        "example": "{\n    \"incident_datetime\": \"2024-07-23T00:00:00\",\n    \"incident_description\": \"Vol de trottinette Xiaomi 4 Ultra garée dans le parking à vélo, en bas du bâtiment, dans un espace public.\",\n    \"incident_location\": \"Place de l'Étoile, Montrouge\",\n    \"policyholder_name\": \"Clémence Lesné\"\n}"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageModel"
                        }
                    },
                    "next": {
                        "$ref": "#/components/schemas/NextModel",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "justification": {
                                "type": "string"
                            }
                        }
                    },
                    "reminders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReminderModel"
                        }
                    },
                    "synthesis": {
                        "$ref": "#/components/schemas/SynthesisModel",
                        "properties": {
                            "long": {
                                "type": "string"
                            },
                            "satisfaction": {
                                "type": "string"
                            },
                            "short": {
                                "type": "string"
                            },
                            "improvement_suggestions": {
                                "type": "string"
                            }
                        }
                    },
                    "recognition_retry": {
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer",
                        "example": "0"
                    },
                    "in_progress": {
                        "type": "boolean"
                    }
                }
            },
            "CallInitiateModel": {
                "title": "Root Type for CallInitiateModel",
                "description": "",
                "required": [
                    "phone_number"
                ],
                "type": "object",
                "properties": {
                    "agent_phone_number": {
                        "type": "string"
                    },
                    "bot_company": {
                        "type": "string"
                    },
                    "bot_name": {
                        "type": "string"
                    },
                    "claim": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClaimFieldModel"
                        }
                    },
                    "lang": {
                        "$ref": "#/components/schemas/LanguageModel",
                        "properties": {
                            "default_short_code": {
                                "type": "string"
                            },
                            "availables": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "pronunciations_en": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "short_code": {
                                            "type": "string"
                                        },
                                        "voice": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "prosody_rate": {
                        "format": "int32",
                        "maximum": 1.25,
                        "minimum": 0.75,
                        "type": "integer",
                        "example": "1.0"
                    },
                    "task": {
                        "type": "string",
                        "example": "Helping the customer to file an insurance claim. The customer is probably calling because they have a problem with something covered by their policy, but it's not certain. The assistant needs information from the customer to complete the claim. The conversation is over when all the data relevant to the case has been collected. Filling in as much information as possible is important for further processing."
                    },
                    "phone_number": {
                        "description": "Phone number in a E164 format.",
                        "pattern": "^\\+[1-9]\\d{1,14}$",
                        "type": "string",
                        "example": "+336579996809"
                    }
                }
            },
            "ClaimFieldModel": {
                "title": "Root Type for ClaimFieldModel",
                "description": "",
                "required": [
                    "type",
                    "name",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "Date and time of the incident."
                    },
                    "name": {
                        "type": "string",
                        "example": "incident_datetime"
                    },
                    "type": {
                        "description": "",
                        "enum": [
                            "datetime",
                            "email",
                            "phone_number",
                            "text"
                        ],
                        "type": "string"
                    }
                }
            },
            "MessageModel": {
                "title": "Root Type for MessageModel",
                "description": "",
                "required": [
                    "action",
                    "content",
                    "created_at",
                    "persona",
                    "style",
                    "tool_calls"
                ],
                "type": "object",
                "properties": {
                    "created_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "content": {
                        "type": "string",
                        "example": "Thank you, Clémence. I'm now going to update your file with your name and the scooter reference. I'm updating the file with your name. The scooter reference is now saved."
                    },
                    "persona": {
                        "enum": [
                            "assistant",
                            "human",
                            "tool"
                        ],
                        "type": "string"
                    },
                    "style": {
                        "enum": [
                            "cheerful",
                            "none",
                            "sad"
                        ],
                        "type": "string"
                    },
                    "tool_calls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToolModel"
                        }
                    },
                    "action": {
                        "description": "",
                        "enum": [
                            "call",
                            "hangup",
                            "sms",
                            "talk"
                        ],
                        "type": "string"
                    }
                }
            },
            "ToolModel": {
                "title": "Root Type for ToolModel",
                "description": "",
                "required": [
                    "content",
                    "function_arguments",
                    "function_name",
                    "tool_id"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "example": "# Updated fields\\n- Updated claim field \\\"policyholder_name\\\" with value \\\"Clémence Lesne\\\"."
                    },
                    "function_arguments": {
                        "type": "string",
                        "example": "{\\\"customer_response\\\": \\\"Je mets à jour le dossier avec votre nom.\\\", \\\"updates\\\": [{\\\"field\\\": \\\"policyholder_name\\\", \\\"value\\\": \\\"Clémence Lesne\\\"}]}"
                    },
                    "function_name": {
                        "type": "string",
                        "example": "updated_claim"
                    },
                    "tool_id": {
                        "type": "string",
                        "example": "call_7f56XNaBEsfn4uesZaQ6PMFp"
                    }
                }
            },
            "NextModel": {
                "title": "Root Type for NextModel",
                "description": "",
                "required": [
                    "action",
                    "justification"
                ],
                "type": "object",
                "properties": {
                    "action": {
                        "enum": [
                            "case_closed",
                            "commercial_offer",
                            "customer_will_send_info",
                            "high_priority",
                            "propose_new_contract",
                            "requires_expertise"
                        ],
                        "type": "string"
                    },
                    "justification": {
                        "type": "string",
                        "example": "All necessary information for the claim has been collected and the customer has been informed that their case has been updated. The customer did not express any further concerns or questions."
                    }
                }
            },
            "ReminderModel": {
                "description": "",
                "required": [
                    "created_at",
                    "description",
                    "due_date_time",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "created_at": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "due_date_time": {
                        "format": "date-time",
                        "description": "",
                        "type": "string"
                    },
                    "owner": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "SynthesisModel": {
                "title": "Root Type for SynthesisModel",
                "description": "",
                "required": [
                    "improvement_suggestions",
                    "long",
                    "satisfaction",
                    "short"
                ],
                "type": "object",
                "properties": {
                    "long": {
                        "type": "string",
                        "example": "I understand that your Xiaomi 4 Ultra scooter was stolen on July 23, 2024, from the bike parking area at Place de l'Étoile, Montrouge. I have updated your claim with all the necessary details to ensure that your situation is well-documented."
                    },
                    "satisfaction": {
                        "enum": [
                            "terrible",
                            "low",
                            "partial",
                            "high",
                            "unknown"
                        ],
                        "type": "string"
                    },
                    "short": {
                        "type": "string",
                        "example": "the theft of your scooter"
                    },
                    "improvement_suggestions": {
                        "type": "string",
                        "example": "Ensure that the customer is aware of the next steps after the claim is filed, such as expected processing time and any additional documentation that may be required."
                    }
                }
            },
            "LanguageEntryModel": {
                "title": "Root Type for LanguageEntryModel",
                "description": "",
                "required": [
                    "pronunciations_en",
                    "short_code",
                    "voice"
                ],
                "type": "object",
                "properties": {
                    "pronunciations_en": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "[\n    \"English\",\n    \"American\",\n    \"USA\"\n]"
                    },
                    "short_code": {
                        "type": "string",
                        "example": "en-US"
                    },
                    "voice": {
                        "type": "string",
                        "example": "en-US-NancyNeural"
                    }
                }
            },
            "LanguageModel": {
                "description": "",
                "required": [
                    "default_short_code",
                    "availables"
                ],
                "type": "object",
                "properties": {
                    "default_short_code": {
                        "description": "",
                        "type": "string",
                        "example": "en-US"
                    },
                    "availables": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguageEntryModel"
                        }
                    }
                }
            },
            "ErrorModel": {
                "description": "",
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorEntryModel",
                        "description": ""
                    }
                }
            },
            "ErrorEntryModel": {
                "description": "",
                "required": [
                    "message",
                    "details"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "description": "",
                        "type": "string",
                        "example": "Validation error"
                    },
                    "details": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "[\n    \"Missing field value for \\\"phone_number\\\".\"\n]"
                    }
                }
            },
            "TwilioSmsModel": {
                "description": "",
                "required": [
                    "From",
                    "Body"
                ],
                "type": "object",
                "properties": {
                    "From": {
                        "description": "Phone number in a E164 format.",
                        "pattern": "^\\+[1-9]\\d{1,14}$",
                        "type": "string",
                        "example": "+336952679801"
                    },
                    "Body": {
                        "description": "Raw content of the SMS.",
                        "type": "string",
                        "example": "I confirm the address to 31 rue de La Jolie, 75003 Paris."
                    }
                }
            }
        },
        "securitySchemes": {
            "AzureCommunicationServicesManaged": {
                "scheme": "bearer",
                "type": "http"
            },
            "CallbackCallSecret": {
                "type": "apiKey",
                "name": "secret",
                "in": "query"
            }
        }
    }
}
